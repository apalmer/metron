@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

@{

}

<div class="text-center">
    <h1 class="display-4">ingestion</h1>

    <form id="form-query" action="/" method="get">

        <div class="input-group mb-3">
            <span class="input-group-text">created_at</span>
            <input id="filter-id" data-field="id" type="text" class="form-control" aria-label="Filter id">
            <button class="btn btn-secondary-inline-form data-filter" data-field="created_at" type="submit"><i class="bi-funnel"></i></button>
            <button class="btn btn-secondary-inline-form data-sorter" data-field="created_at" type="submit"><i class="bi-dash"></i></button>
        </div>

        <div class="input-group mb-3">
            <span class="input-group-text">user_id</span>
            <input id="filter-user_id" data-field="user_id" type="text" class="form-control" aria-label="Filter user_id">
            <button class="btn btn-secondary-inline-form data-filter" data-field="user_id" type="submit"><i class="bi-funnel"></i></button>
            <button class="btn btn-secondary-inline-form data-sorter" data-field="user_id" type="submit"><i class="bi-dash"></i></button>
        </div>

        <div class="input-group mb-3">
            <span class="input-group-text">data_schema_name</span>
            <input id="filter-data_schema_name" data-field="data_schema_name" type="text" class="form-control" aria-label="Filter data_schema_name">
            <button class="btn btn-secondary-inline-form data-filter" data-field="data_schema_name" type="submit"><i class="bi-funnel"></i></button>
            <button class="btn btn-secondary-inline-form data-sorter" data-field="data_schema_name" type="submit"><i class="bi-dash"></i></button>
        </div>

        <div class="input-group mb-3">
            <span class="input-group-text">data_schema_version</span>
            <input id="filter-data_schema_version" data-field="data_schema_version" type="text" class="form-control" aria-label="Filter data_schema_version">
            <button class="btn btn-secondary-inline-form data-filter" data-field="data_schema_version" type="submit"><i class="bi-funnel"></i></button>
            <button class="btn btn-secondary-inline-form data-sorter" data-field="data_schema_version" type="submit"><i class="bi-dash"></i></button>
        </div>

    </form>

    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>id</th>
                <th>created_at</th>
                <th>user_id</th>
                <th>data_schema_name</th>
                <th>data_schema_version</th>
                @* <th>data</th> *@
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Ingestions != null)
            {
                foreach (var ingestion in Model.Ingestions)
                {
                    <tr>
                        <td>@ingestion.id</td>
                        <td>@ingestion.created_at</td>
                        <td>@ingestion.user_id</td>
                        <td>@ingestion.data_schema_name</td>
                        <td>@ingestion.data_schema_version</td>
                        @* <td>@ingestion.data.ToString()</td> *@
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            $('#form-query').on('submit', (e) => {
                e.preventDefault();
            });

            $(document).on('click', 'button.data-filter', (e) => {
                var fieldName = e.currentTarget.getAttribute('data-field');
                var filterValue = $('#filter-' + fieldName).val();

                var searchParams = new URLSearchParams(window.location.search);
                var filter = searchParams.get(fieldName);
                if (filter) {
                    searchParams.delete(fieldName);
                }
                else {
                    searchParams.set(fieldName, 'like.' + filterValue);
                }

                window.location.search = searchParams.toString();
            });

            $('.data-sorter').on('click', (e) => {
                var fieldName = e.currentTarget.getAttribute('data-field');
                var orderDirection = 'asc';
                var orderString = fieldName + '.' + orderDirection;

                var searchParams = new URLSearchParams(window.location.search);
                var orderSearchParam = searchParams.get('order');
                if (orderSearchParam) {
                    var orderStrings = orderSearchParam.split(',');
                    var foundIndex = orderStrings.findIndex((value, index) => {
                        return value.split('.')[0] === fieldName;
                    })

                    if (foundIndex != -1) {
                        var previousDirection = orderStrings[foundIndex].split('.')[1];
                        if (previousDirection.toUpperCase() === 'ASC') {
                            orderDirection = 'desc';
                            orderString = fieldName + '.' + orderDirection;
                            orderStrings[foundIndex] = orderString;
                        }
                        else if (previousDirection.toUpperCase() === 'DESC') {
                            orderDirection = '';
                            orderStrings.splice(foundIndex, 1);
                        }
                    }
                    else {
                        orderStrings.push(orderString);
                    }

                    orderSearchParam = orderStrings.join(',');
                }
                else {
                    orderSearchParam = orderString;
                }
                searchParams.set('order', orderSearchParam);
                var sp = searchParams.toString();
                window.location.search = sp;

                //window.location.href = window.location.href;
            });

            var searchParams = new URLSearchParams(window.location.search);
            var orderSearchParam = searchParams.get('order');
            if (orderSearchParam) {
                var orderStrings = orderSearchParam.split(',');
                orderStrings.forEach((value, index) => {
                    var orderArgs = value.split('.');
                    var field = orderArgs[0];
                    var direction = orderArgs[1];

                    var iconClass =
                        direction.toUpperCase() === 'ASC' ?
                            'bi-caret-up-fill' :
                            direction.toUpperCase() === 'DESC' ?
                                'bi-caret-down-fill' :
                                'bi-dash';

                    $('.data-sorter[data-field="' + field + '"]').html('<i class="' + iconClass + '">');
                });
            }

            var filterKeys = searchParams.forEach((value, key) => {
                if (key === 'order') { return; }

                var filterArgs = value.split('.');
                var operation = filterArgs[0];
                var operand = filterArgs[1];

                if (operation.toUpperCase() === 'LIKE') {
                    $('#filter-' + key).val(operand).prop("disabled", true);
                    $('.data-filter[data-field="' + key + '"]').html('<i class="bi-funnel-fill">');
                }

            });
        });

    </script>
}